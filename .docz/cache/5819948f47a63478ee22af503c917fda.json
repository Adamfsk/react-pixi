{"remainingRequest":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false,\"targets\":{\"browsers\":[\"last 2 versions\"]}}],\"@babel/preset-react\",[\"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":false}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-import-meta\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-proposal-json-strings\",[\"@babel/plugin-proposal-decorators\",{\"legacy\":true}],\"@babel/plugin-proposal-function-sent\",\"@babel/plugin-proposal-export-namespace-from\",\"@babel/plugin-proposal-numeric-separator\",\"@babel/plugin-proposal-throw-expressions\",\"@babel/plugin-proposal-export-default-from\",\"@babel/plugin-proposal-logical-assignment-operators\",\"@babel/plugin-proposal-optional-chaining\",[\"@babel/plugin-proposal-pipeline-operator\",{\"proposal\":\"minimal\"}],\"@babel/plugin-proposal-nullish-coalescing-operator\",\"@babel/plugin-proposal-do-expressions\",\"@babel/plugin-proposal-function-bind\",[\"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/react-hot-loader/babel.js\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-import-meta\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-proposal-json-strings\",[\"@babel/plugin-proposal-decorators\",{\"legacy\":true}],\"@babel/plugin-proposal-function-sent\",\"@babel/plugin-proposal-export-namespace-from\",\"@babel/plugin-proposal-numeric-separator\",\"@babel/plugin-proposal-throw-expressions\",\"@babel/plugin-proposal-export-default-from\",\"@babel/plugin-proposal-logical-assignment-operators\",\"@babel/plugin-proposal-optional-chaining\",[\"@babel/plugin-proposal-pipeline-operator\",{\"proposal\":\"minimal\"}],\"@babel/plugin-proposal-nullish-coalescing-operator\",\"@babel/plugin-proposal-do-expressions\",\"@babel/plugin-proposal-function-bind\"]}},\"cacheDirectory\":true,\"babelrc\":false}!/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/components/ParticleContainer.mdx","dependencies":[{"path":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/components/ParticleContainer.mdx","mtime":1533129929000},{"path":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/cache-loader/dist/cjs.js","mtime":1536573885000},{"path":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1538135612000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/components/ParticleContainer.mdx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { Playground } from 'docz';\nimport Stage from '../stage';\nimport ParticleContainer from './ParticleContainerDocz';\nimport { Sprite } from '../index';\n\nvar _default = function _default(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"particlecontainer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"ParticleContainer\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"NOTE: Writing PIXI apps in vanilla js (the imperative way) is always more performant.\\nThe React reconciler needs to pass and validate props which can be costly when dealing with lots of components. \"), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Most of the time you won't notice any difference though (rendering 1000 sprites in a particle container is still fast).\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"props\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Props\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://pixijs.download/dev/docs/PIXI.particles.ParticleContainer.html\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"http://pixijs.download/dev/docs/PIXI.particles.ParticleContainer.html\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"maxsize\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"maxSize\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"The maximum number of particles that can be rendered by the container. Affects size of allocated buffers.\\nThis will only affect the component once and will be applied during creation.\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"properties\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h3\",\n    props: {\n      \"href\": \"http://pixijs.download/dev/docs/PIXI.particles.ParticleContainer.html#ParticleContainer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"properties\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"The properties of children that should be uploaded to the gpu and applied.\"), React.createElement(MDXTag, {\n    name: \"table\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"thead\",\n    components: components,\n    parentName: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"tr\",\n    components: components,\n    parentName: \"thead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"th\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Prop\"), React.createElement(MDXTag, {\n    name: \"th\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Default Value\"), React.createElement(MDXTag, {\n    name: \"th\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Description\"))), React.createElement(MDXTag, {\n    name: \"tbody\",\n    components: components,\n    parentName: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"tr\",\n    components: components,\n    parentName: \"tbody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"vertices \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"td\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"boolean\")), React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"false\"), React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"When true, vertices be uploaded and applied. if sprite's \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"td\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"scale/anchor/trim/frame/orig\"), \" is dynamic, please set true.\")), React.createElement(MDXTag, {\n    name: \"tr\",\n    components: components,\n    parentName: \"tbody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"position \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"td\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"boolean\")), React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"true\"), React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"When true, position be uploaded and applied.\")), React.createElement(MDXTag, {\n    name: \"tr\",\n    components: components,\n    parentName: \"tbody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"rotation \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"td\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"boolean\")), React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"false\"), React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"When true, rotation be uploaded and applied.\")), React.createElement(MDXTag, {\n    name: \"tr\",\n    components: components,\n    parentName: \"tbody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"uvs \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"td\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"boolean\")), React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"false\"), React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"When true, uvs be uploaded and applied.\")), React.createElement(MDXTag, {\n    name: \"tr\",\n    components: components,\n    parentName: \"tbody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"tint \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"td\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"boolean\")), React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"false\"), React.createElement(MDXTag, {\n    name: \"td\",\n    components: components,\n    parentName: \"tr\",\n    props: {\n      \"align\": null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"When true, alpha and tint be uploaded and applied.\")))), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"batchsize\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"batchSize\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Number of particles per batch. If less than \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"maxSize\"), \", it uses maxSize instead.\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"autoresize\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"autoResize\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"If true, container allocates more batches in case there are more than \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"maxSize\"), \" particles.\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"usage\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Usage\"), React.createElement(Playground, {\n    __position: 0,\n    __codesandbox: \"\",\n    __code: \"<Stage width={300} height={300} options={{ backgroundColor: 0xeef1f5 }}>\\n  <ParticleContainer position={[150, 150]} properties={{ position: true }}>\\n    <Sprite\\n      anchor={0.5}\\n      x={-75}\\n      y={-75}\\n      image=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\\\"\\n    />\\n    <Sprite\\n      anchor={0.5}\\n      x={0}\\n      y={0}\\n      image=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\\\"\\n    />\\n    <Sprite\\n      anchor={0.5}\\n      x={75}\\n      y={75}\\n      image=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\\\"\\n    />\\n  </ParticleContainer>\\n</Stage>\",\n    __scope: {\n      props: props,\n      Stage: Stage,\n      ParticleContainer: ParticleContainer,\n      Sprite: Sprite\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Stage, {\n    width: 300,\n    height: 300,\n    options: {\n      backgroundColor: 0xeef1f5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(ParticleContainer, {\n    position: [150, 150],\n    properties: {\n      position: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Sprite, {\n    anchor: 0.5,\n    x: -75,\n    y: -75,\n    image: \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Sprite, {\n    anchor: 0.5,\n    x: 0,\n    y: 0,\n    image: \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Sprite, {\n    anchor: 0.5,\n    x: 75,\n    y: 75,\n    image: \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })))), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"example\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Example\"), React.createElement(\"iframe\", {\n    height: 600,\n    scrolling: \"no\",\n    title: \"Container\",\n    src: \"//codepen.io/inlet/embed/db5dc6ecfb42bbf8dd5322a1015dff70/?height=600&theme-id=33987&default-tab=result&embed-version=2\",\n    frameBorder: \"no\",\n    allowtransparency: \"true\",\n    allowFullScreen: \"true\",\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }));\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/components/ParticleContainer.mdx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/components/ParticleContainer.mdx"],"names":["React","MDXTag","Playground","Stage","ParticleContainer","Sprite","components","props","backgroundColor","position","width"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz'\nimport Stage from '../stage'\nimport ParticleContainer from './ParticleContainerDocz'\nimport { Sprite } from '../index'\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"particlecontainer\"}}>{`ParticleContainer`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`NOTE: Writing PIXI apps in vanilla js (the imperative way) is always more performant.\nThe React reconciler needs to pass and validate props which can be costly when dealing with lots of components. `}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`Most of the time you won't notice any difference though (rendering 1000 sprites in a particle container is still fast).`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"http://pixijs.download/dev/docs/PIXI.particles.ParticleContainer.html\"}}>{`http://pixijs.download/dev/docs/PIXI.particles.ParticleContainer.html`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"maxsize\"}}>{`maxSize`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The maximum number of particles that can be rendered by the container. Affects size of allocated buffers.\nThis will only affect the component once and will be applied during creation.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"properties\"}}><MDXTag name=\"a\" components={components} parentName=\"h3\" props={{\"href\":\"http://pixijs.download/dev/docs/PIXI.particles.ParticleContainer.html#ParticleContainer\"}}>{`properties`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The properties of children that should be uploaded to the gpu and applied.`}</MDXTag>\n<MDXTag name=\"table\" components={components}>\n<MDXTag name=\"thead\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"thead\">\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Prop`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Default Value`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Description`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"tbody\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`vertices `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`boolean`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`false`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`When true, vertices be uploaded and applied. if sprite's `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`scale/anchor/trim/frame/orig`}</MDXTag>{` is dynamic, please set true.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`position `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`boolean`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`true`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`When true, position be uploaded and applied.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`rotation `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`boolean`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`false`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`When true, rotation be uploaded and applied.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`uvs `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`boolean`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`false`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`When true, uvs be uploaded and applied.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`tint `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`boolean`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`false`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`When true, alpha and tint be uploaded and applied.`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"batchsize\"}}>{`batchSize`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Number of particles per batch. If less than `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`maxSize`}</MDXTag>{`, it uses maxSize instead.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"autoresize\"}}>{`autoResize`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If true, container allocates more batches in case there are more than `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`maxSize`}</MDXTag>{` particles.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __codesandbox={``} __code={`<Stage width={300} height={300} options={{ backgroundColor: 0xeef1f5 }}>\n  <ParticleContainer position={[150, 150]} properties={{ position: true }}>\n    <Sprite\n      anchor={0.5}\n      x={-75}\n      y={-75}\n      image=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\"\n    />\n    <Sprite\n      anchor={0.5}\n      x={0}\n      y={0}\n      image=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\"\n    />\n    <Sprite\n      anchor={0.5}\n      x={75}\n      y={75}\n      image=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\"\n    />\n  </ParticleContainer>\n</Stage>`} __scope={{props,Stage,ParticleContainer,Sprite}}>\n  <Stage width={300} height={300} options={{ backgroundColor: 0xeef1f5 }}>\n    <ParticleContainer position={[150, 150]} properties={{ position: true }}>\n      <Sprite\n        anchor={0.5}\n        x={-75}\n        y={-75}\n        image=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\"\n      />\n      <Sprite\n        anchor={0.5}\n        x={0}\n        y={0}\n        image=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\"\n      />\n      <Sprite\n        anchor={0.5}\n        x={75}\n        y={75}\n        image=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\"\n      />\n    </ParticleContainer>\n  </Stage>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<iframe \n  height={600} \n  scrolling=\"no\"\n  title=\"Container\" \n  src=\"//codepen.io/inlet/embed/db5dc6ecfb42bbf8dd5322a1015dff70/?height=600&theme-id=33987&default-tab=result&embed-version=2\"\n  frameBorder=\"no\" \n  allowtransparency=\"true\"\n  allowFullScreen=\"true\"\n  style={{ width: '100%' }} /></MDXTag>\n  "]}]}