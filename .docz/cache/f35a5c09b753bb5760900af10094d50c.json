{"remainingRequest":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false,\"targets\":{\"browsers\":[\"last 2 versions\"]}}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-import-meta\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-proposal-json-strings\",[\"@babel/plugin-proposal-decorators\",{\"legacy\":true}],\"@babel/plugin-proposal-function-sent\",\"@babel/plugin-proposal-export-namespace-from\",\"@babel/plugin-proposal-numeric-separator\",\"@babel/plugin-proposal-throw-expressions\",\"@babel/plugin-proposal-export-default-from\",\"@babel/plugin-proposal-logical-assignment-operators\",\"@babel/plugin-proposal-optional-chaining\",[\"@babel/plugin-proposal-pipeline-operator\",{\"proposal\":\"minimal\"}],\"@babel/plugin-proposal-nullish-coalescing-operator\",\"@babel/plugin-proposal-do-expressions\",\"@babel/plugin-proposal-function-bind\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-import-meta\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-proposal-json-strings\",[\"@babel/plugin-proposal-decorators\",{\"legacy\":true}],\"@babel/plugin-proposal-function-sent\",\"@babel/plugin-proposal-export-namespace-from\",\"@babel/plugin-proposal-numeric-separator\",\"@babel/plugin-proposal-throw-expressions\",\"@babel/plugin-proposal-export-default-from\",\"@babel/plugin-proposal-logical-assignment-operators\",\"@babel/plugin-proposal-optional-chaining\",[\"@babel/plugin-proposal-pipeline-operator\",{\"proposal\":\"minimal\"}],\"@babel/plugin-proposal-nullish-coalescing-operator\",\"@babel/plugin-proposal-do-expressions\",\"@babel/plugin-proposal-function-bind\"]}},\"cacheDirectory\":true,\"babelrc\":false}!/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/utils/pixi.js","dependencies":[{"path":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/utils/pixi.js","mtime":1526031063000},{"path":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport * as PIXI from 'pixi.js';\nimport invariant from 'fbjs/lib/invariant';\nimport idx from 'idx';\nimport isNil from 'lodash/isNil';\n/**\n * Parse PIXI point value to array of coordinates\n *\n * @param {*} value\n * @returns {Array}\n */\n\nexport function parsePoint(value) {\n  var arr = [];\n\n  if (typeof value === 'undefined') {\n    return arr;\n  } else if (typeof value === 'string') {\n    arr = value.split(',');\n  } else if (typeof value === 'number') {\n    arr = [value];\n  } else if (Array.isArray(value)) {\n    arr = _toConsumableArray(value);\n  } else if (value !== null && _typeof(value) === 'object') {\n    var x = idx(value, function (_) {\n      return _.x;\n    }) || 0;\n    var y = idx(value, function (_) {\n      return _.y;\n    }) || 0;\n    arr = [x, y];\n  } else {\n    return arr;\n  }\n\n  return arr.filter(function (p) {\n    return !isNil(p) && !isNaN(p);\n  }).map(Number);\n}\n/**\n * Determine value is type of Point or ObservablePoint\n * See https://github.com/michalochman/react-pixi-fiber/blob/a4dbddbef0ffbf0f563c64d30766ea28222a51ea/src/utils.js#L48\n *\n * @param {*} value\n * @returns {boolean}\n */\n\nexport function isPointType(value) {\n  return value instanceof PIXI.Point || value instanceof PIXI.ObservablePoint;\n}\n/**\n * Event handlers\n *\n * @type {string[]}\n */\n\nexport var eventHandlers = ['click', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'mouseupoutside', 'tap', 'touchstart', 'touchmove', 'touchend', 'touchendoutside', 'pointercancel', 'pointerout', 'pointerover', 'pointertap', 'pointerdown', 'pointerup', 'pointerupoutside', 'pointermove', 'rightclick', 'rightdown', 'rightup', 'rightupoutside', 'touchcancel', 'touchendoutside', 'touchmove', 'touchstart'];\n/**\n * Set value on a PIXI.DisplayObject\n * See https://github.com/Izzimach/react-pixi/blob/a25196251a13ed9bb116a8576d93e9fceac2a14c/src/ReactPIXI.js#L114\n *\n * @param {PIXI.DisplayObject} instance\n * @param {string} prop\n * @param {*} value\n */\n\nexport function setValue(instance, prop, value) {\n  if (isPointType(instance[prop]) && isPointType(value)) {\n    // copy value\n    instance[prop].copy(value);\n  } else if (isPointType(instance[prop])) {\n    // parse value if a non-Point type is being assigned to a Point type\n    var coordinates = parsePoint(value);\n    invariant(typeof coordinates !== 'undefined' && coordinates.length > 0 && coordinates.length < 3, 'The property `%s` is a `PIXI.Point` or `PIXI.ObservablePoint` and must be set to a comma-separated string of ' + 'either 1 or 2 coordinates, a 1 or 2 element array containing coordinates, or a PIXI Point/ObservablePoint. ' + 'If only one coordinate is given then X and Y will be set to the provided value. Received: `%s` of type `%s`.', prop, JSON.stringify(value), _typeof(value));\n    instance[prop].set(coordinates.shift(), coordinates.shift());\n  } else {\n    // just hard assign value\n    instance[prop] = value;\n  }\n}",{"version":3,"sources":["src/utils/pixi.js"],"names":["PIXI","invariant","idx","isNil","parsePoint","value","arr","split","Array","isArray","x","_","y","filter","p","isNaN","map","Number","isPointType","Point","ObservablePoint","eventHandlers","setValue","instance","prop","copy","coordinates","length","JSON","stringify","set","shift"],"mappings":"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","sourceRoot":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber","sourcesContent":["import * as PIXI from 'pixi.js'\nimport invariant from 'fbjs/lib/invariant'\nimport idx from 'idx'\nimport isNil from 'lodash/isNil'\n\n/**\n * Parse PIXI point value to array of coordinates\n *\n * @param {*} value\n * @returns {Array}\n */\nexport function parsePoint(value) {\n  let arr = []\n\n  if (typeof value === 'undefined') {\n    return arr\n  } else if (typeof value === 'string') {\n    arr = value.split(',')\n  } else if (typeof value === 'number') {\n    arr = [value]\n  } else if (Array.isArray(value)) {\n    arr = [...value]\n  } else if (value !== null && typeof value === 'object') {\n    const x = idx(value, _ => _.x) || 0\n    const y = idx(value, _ => _.y) || 0\n    arr = [x, y]\n  } else {\n    return arr\n  }\n\n  return arr.filter(p => !isNil(p) && !isNaN(p)).map(Number)\n}\n\n/**\n * Determine value is type of Point or ObservablePoint\n * See https://github.com/michalochman/react-pixi-fiber/blob/a4dbddbef0ffbf0f563c64d30766ea28222a51ea/src/utils.js#L48\n *\n * @param {*} value\n * @returns {boolean}\n */\nexport function isPointType(value) {\n  return value instanceof PIXI.Point || value instanceof PIXI.ObservablePoint\n}\n\n/**\n * Event handlers\n *\n * @type {string[]}\n */\nexport const eventHandlers = [\n  'click',\n  'mousedown',\n  'mousemove',\n  'mouseout',\n  'mouseover',\n  'mouseup',\n  'mouseupoutside',\n  'tap',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchendoutside',\n  'pointercancel',\n  'pointerout',\n  'pointerover',\n  'pointertap',\n  'pointerdown',\n  'pointerup',\n  'pointerupoutside',\n  'pointermove',\n  'rightclick',\n  'rightdown',\n  'rightup',\n  'rightupoutside',\n  'touchcancel',\n  'touchendoutside',\n  'touchmove',\n  'touchstart',\n]\n\n/**\n * Set value on a PIXI.DisplayObject\n * See https://github.com/Izzimach/react-pixi/blob/a25196251a13ed9bb116a8576d93e9fceac2a14c/src/ReactPIXI.js#L114\n *\n * @param {PIXI.DisplayObject} instance\n * @param {string} prop\n * @param {*} value\n */\nexport function setValue(instance, prop, value) {\n  if (isPointType(instance[prop]) && isPointType(value)) {\n    // copy value\n    instance[prop].copy(value)\n  } else if (isPointType(instance[prop])) {\n    // parse value if a non-Point type is being assigned to a Point type\n    const coordinates = parsePoint(value)\n\n    invariant(\n      typeof coordinates !== 'undefined' && coordinates.length > 0 && coordinates.length < 3,\n      'The property `%s` is a `PIXI.Point` or `PIXI.ObservablePoint` and must be set to a comma-separated string of ' +\n        'either 1 or 2 coordinates, a 1 or 2 element array containing coordinates, or a PIXI Point/ObservablePoint. ' +\n        'If only one coordinate is given then X and Y will be set to the provided value. Received: `%s` of type `%s`.',\n      prop,\n      JSON.stringify(value),\n      typeof value\n    )\n\n    instance[prop].set(coordinates.shift(), coordinates.shift())\n  } else {\n    // just hard assign value\n    instance[prop] = value\n  }\n}\n"]}]}