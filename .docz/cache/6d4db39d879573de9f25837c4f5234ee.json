{"remainingRequest":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false,\"targets\":{\"browsers\":[\"last 2 versions\"]}}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-import-meta\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-proposal-json-strings\",[\"@babel/plugin-proposal-decorators\",{\"legacy\":true}],\"@babel/plugin-proposal-function-sent\",\"@babel/plugin-proposal-export-namespace-from\",\"@babel/plugin-proposal-numeric-separator\",\"@babel/plugin-proposal-throw-expressions\",\"@babel/plugin-proposal-export-default-from\",\"@babel/plugin-proposal-logical-assignment-operators\",\"@babel/plugin-proposal-optional-chaining\",[\"@babel/plugin-proposal-pipeline-operator\",{\"proposal\":\"minimal\"}],\"@babel/plugin-proposal-nullish-coalescing-operator\",\"@babel/plugin-proposal-do-expressions\",\"@babel/plugin-proposal-function-bind\",\"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/react-hot-loader/babel.js\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-import-meta\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-proposal-json-strings\",[\"@babel/plugin-proposal-decorators\",{\"legacy\":true}],\"@babel/plugin-proposal-function-sent\",\"@babel/plugin-proposal-export-namespace-from\",\"@babel/plugin-proposal-numeric-separator\",\"@babel/plugin-proposal-throw-expressions\",\"@babel/plugin-proposal-export-default-from\",\"@babel/plugin-proposal-logical-assignment-operators\",\"@babel/plugin-proposal-optional-chaining\",[\"@babel/plugin-proposal-pipeline-operator\",{\"proposal\":\"minimal\"}],\"@babel/plugin-proposal-nullish-coalescing-operator\",\"@babel/plugin-proposal-do-expressions\",\"@babel/plugin-proposal-function-bind\"]}},\"cacheDirectory\":true,\"babelrc\":false}!/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/reconciler/hostconfig.js","dependencies":[{"path":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/reconciler/hostconfig.js","mtime":1533129929000},{"path":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n/**\n * -------------------------------------------\n * Host Config file.\n *\n * See:\n *   https://github.com/facebook/react/tree/master/packages/react-reconciler\n *   https://github.com/facebook/react/blob/master/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js\n * -------------------------------------------\n */\nimport invariant from 'fbjs/lib/invariant';\nimport performanceNow from 'performance-now';\nimport { createElement } from '../utils/element';\nimport { CHILDREN, applyDefaultProps } from '../utils/props';\n\nfunction appendChild(parent, child) {\n  if (parent.addChild) {\n    parent.addChild(child);\n\n    if (typeof child.didMount === 'function') {\n      child.didMount.call(child, child, parent);\n    }\n  }\n}\n\nfunction removeChild(parent, child) {\n  if (typeof child.willUnmount === 'function') {\n    child.willUnmount.call(child, child, parent);\n  }\n\n  parent.removeChild(child);\n  child.destroy();\n}\n\nfunction insertBefore(parent, child, beforeChild) {\n  invariant(child !== beforeChild, 'PixiFiber cannot insert node before itself');\n  var childExists = parent.children.indexOf(child) !== -1;\n  var index = parent.getChildIndex(beforeChild);\n  childExists ? parent.setChildIndex(child, index) : parent.addChildAt(child, index);\n} // get diff between 2 objects\n// https://github.com/facebook/react/blob/97e2911/packages/react-dom/src/client/ReactDOMFiberComponent.js#L546\n\n\nfunction diffProperties(pixiElement, type, lastProps, nextProps, rootContainerElement) {\n  var updatePayload = null;\n\n  for (var propKey in lastProps) {\n    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n      continue;\n    }\n\n    if (propKey === CHILDREN) {// Noop. Text children not supported\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the whitelist in the commit phase instead.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n\n      updatePayload.push(propKey, null);\n    }\n  }\n\n  for (var _propKey in nextProps) {\n    var nextProp = nextProps[_propKey];\n    var lastProp = lastProps != null ? lastProps[_propKey] : undefined;\n\n    if (!nextProps.hasOwnProperty(_propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n      continue;\n    }\n\n    if (_propKey === CHILDREN) {// Noop. Text children not supported\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the whitelist during the commit.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n\n      updatePayload.push(_propKey, nextProp);\n    }\n  }\n\n  return updatePayload;\n}\n\nvar _default = {\n  getRootHostContext: function getRootHostContext(rootContainerInstance) {\n    return rootContainerInstance;\n  },\n  getChildHostContext: function getChildHostContext() {\n    return {};\n  },\n  getPublicInstance: function getPublicInstance(instance) {\n    return instance;\n  },\n  prepareForCommit: function prepareForCommit() {// noop\n  },\n  resetAfterCommit: function resetAfterCommit() {// noop\n  },\n  createInstance: createElement,\n  appendInitialChild: appendChild,\n  finalizeInitialChildren: function finalizeInitialChildren(wordElement, type, props) {\n    return false;\n  },\n  prepareUpdate: function prepareUpdate(pixiElement, type, oldProps, newProps, rootContainerInstance, hostContext) {\n    return diffProperties(pixiElement, type, oldProps, newProps, rootContainerInstance);\n  },\n  shouldSetTextContent: function shouldSetTextContent(type, props) {\n    return false;\n  },\n  shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(type, props) {\n    var isAlphaVisible = typeof props.alpha === 'undefined' || props.alpha > 0;\n    var isRenderable = typeof props.renderable === 'undefined' || props.renderable === true;\n    var isVisible = typeof props.visible === 'undefined' || props.visible === true;\n    return !(isAlphaVisible && isRenderable && isVisible);\n  },\n  createTextInstance: function createTextInstance(text, rootContainerInstance, internalInstanceHandler) {\n    invariant(false, 'PixiFiber does not support text instances. Use `<Text /> component` instead.');\n  },\n  now: performanceNow,\n  isPrimaryRenderer: false,\n  supportsMutation: true,\n\n  /**\n   * -------------------------------------------\n   * Mutation\n   * -------------------------------------------\n   */\n  appendChild: appendChild,\n  appendChildToContainer: appendChild,\n  removeChild: removeChild,\n  removeChildFromContainer: removeChild,\n  insertBefore: insertBefore,\n  insertInContainerBefore: insertBefore,\n  commitUpdate: function commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    var applyProps = instance && instance.applyProps;\n\n    if (typeof applyProps !== 'function') {\n      applyProps = applyDefaultProps;\n    }\n\n    applyProps(instance, oldProps, newProps);\n  },\n  commitMount: function commitMount(instance, updatePayload, type, oldProps, newProps) {// noop\n  },\n  commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {// noop\n  },\n  resetTextContent: function resetTextContent(pixiElement) {// noop\n  }\n};\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(appendChild, \"appendChild\", \"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/reconciler/hostconfig.js\");\n  reactHotLoader.register(removeChild, \"removeChild\", \"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/reconciler/hostconfig.js\");\n  reactHotLoader.register(insertBefore, \"insertBefore\", \"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/reconciler/hostconfig.js\");\n  reactHotLoader.register(diffProperties, \"diffProperties\", \"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/reconciler/hostconfig.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber/src/reconciler/hostconfig.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["src/reconciler/hostconfig.js"],"names":["invariant","performanceNow","createElement","CHILDREN","applyDefaultProps","appendChild","parent","child","addChild","didMount","call","removeChild","willUnmount","destroy","insertBefore","beforeChild","childExists","children","indexOf","index","getChildIndex","setChildIndex","addChildAt","diffProperties","pixiElement","type","lastProps","nextProps","rootContainerElement","updatePayload","propKey","hasOwnProperty","push","nextProp","lastProp","undefined","getRootHostContext","rootContainerInstance","getChildHostContext","getPublicInstance","instance","prepareForCommit","resetAfterCommit","createInstance","appendInitialChild","finalizeInitialChildren","wordElement","props","prepareUpdate","oldProps","newProps","hostContext","shouldSetTextContent","shouldDeprioritizeSubtree","isAlphaVisible","alpha","isRenderable","renderable","isVisible","visible","createTextInstance","text","internalInstanceHandler","now","isPrimaryRenderer","supportsMutation","appendChildToContainer","removeChildFromContainer","insertInContainerBefore","commitUpdate","applyProps","commitMount","commitTextUpdate","textInstance","oldText","newText","resetTextContent"],"mappings":"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","sourceRoot":"/Users/pbrouwer/Documents/work/inlet/repos/react-pixi-fiber","sourcesContent":["/**\n * -------------------------------------------\n * Host Config file.\n *\n * See:\n *   https://github.com/facebook/react/tree/master/packages/react-reconciler\n *   https://github.com/facebook/react/blob/master/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js\n * -------------------------------------------\n */\n\nimport invariant from 'fbjs/lib/invariant'\nimport performanceNow from 'performance-now'\nimport { createElement } from '../utils/element'\nimport { CHILDREN, applyDefaultProps } from '../utils/props'\n\nfunction appendChild(parent, child) {\n  if (parent.addChild) {\n    parent.addChild(child)\n\n    if (typeof child.didMount === 'function') {\n      child.didMount.call(child, child, parent)\n    }\n  }\n}\n\nfunction removeChild(parent, child) {\n  if (typeof child.willUnmount === 'function') {\n    child.willUnmount.call(child, child, parent)\n  }\n\n  parent.removeChild(child)\n  child.destroy()\n}\n\nfunction insertBefore(parent, child, beforeChild) {\n  invariant(child !== beforeChild, 'PixiFiber cannot insert node before itself')\n\n  const childExists = parent.children.indexOf(child) !== -1\n  const index = parent.getChildIndex(beforeChild)\n\n  childExists ? parent.setChildIndex(child, index) : parent.addChildAt(child, index)\n}\n\n// get diff between 2 objects\n// https://github.com/facebook/react/blob/97e2911/packages/react-dom/src/client/ReactDOMFiberComponent.js#L546\nfunction diffProperties(pixiElement, type, lastProps, nextProps, rootContainerElement) {\n  let updatePayload = null\n\n  for (let propKey in lastProps) {\n    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n      continue\n    }\n    if (propKey === CHILDREN) {\n      // Noop. Text children not supported\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the whitelist in the commit phase instead.\n      if (!updatePayload) {\n        updatePayload = []\n      }\n      updatePayload.push(propKey, null)\n    }\n  }\n\n  for (let propKey in nextProps) {\n    const nextProp = nextProps[propKey]\n    const lastProp = lastProps != null ? lastProps[propKey] : undefined\n\n    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || (nextProp == null && lastProp == null)) {\n      continue\n    }\n\n    if (propKey === CHILDREN) {\n      // Noop. Text children not supported\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the whitelist during the commit.\n      if (!updatePayload) {\n        updatePayload = []\n      }\n      updatePayload.push(propKey, nextProp)\n    }\n  }\n  return updatePayload\n}\n\nexport default {\n  getRootHostContext(rootContainerInstance) {\n    return rootContainerInstance\n  },\n\n  getChildHostContext() {\n    return {}\n  },\n\n  getPublicInstance(instance) {\n    return instance\n  },\n\n  prepareForCommit() {\n    // noop\n  },\n\n  resetAfterCommit() {\n    // noop\n  },\n\n  createInstance: createElement,\n\n  appendInitialChild: appendChild,\n\n  finalizeInitialChildren(wordElement, type, props) {\n    return false\n  },\n\n  prepareUpdate(pixiElement, type, oldProps, newProps, rootContainerInstance, hostContext) {\n    return diffProperties(pixiElement, type, oldProps, newProps, rootContainerInstance)\n  },\n\n  shouldSetTextContent(type, props) {\n    return false\n  },\n\n  shouldDeprioritizeSubtree(type, props) {\n    const isAlphaVisible = typeof props.alpha === 'undefined' || props.alpha > 0\n    const isRenderable = typeof props.renderable === 'undefined' || props.renderable === true\n    const isVisible = typeof props.visible === 'undefined' || props.visible === true\n\n    return !(isAlphaVisible && isRenderable && isVisible)\n  },\n\n  createTextInstance(text, rootContainerInstance, internalInstanceHandler) {\n    invariant(false, 'PixiFiber does not support text instances. Use `<Text /> component` instead.')\n  },\n\n  now: performanceNow,\n\n  isPrimaryRenderer: false,\n\n  supportsMutation: true,\n\n  /**\n   * -------------------------------------------\n   * Mutation\n   * -------------------------------------------\n   */\n\n  appendChild,\n\n  appendChildToContainer: appendChild,\n\n  removeChild,\n\n  removeChildFromContainer: removeChild,\n\n  insertBefore,\n\n  insertInContainerBefore: insertBefore,\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    let applyProps = instance && instance.applyProps\n    if (typeof applyProps !== 'function') {\n      applyProps = applyDefaultProps\n    }\n    applyProps(instance, oldProps, newProps)\n  },\n\n  commitMount(instance, updatePayload, type, oldProps, newProps) {\n    // noop\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    // noop\n  },\n\n  resetTextContent(pixiElement) {\n    // noop\n  },\n}\n"]}]}