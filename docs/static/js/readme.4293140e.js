(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./README.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return b});var i=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends.js"),a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),c=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),s={},p="wrapper";function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)(p,Object(i.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"react-pixi-"},"React PIXI \ud83c\udf08"),Object(c.b)("p",null,Object(c.b)("img",{alt:"jest",src:"https://img.shields.io/badge/tested_with-jest-green.svg"})," ","\xa0","\xa0"," ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"https://circleci.com/gh/inlet/react-pixi-fiber"}),Object(c.b)("img",{alt:"CircleCI",src:"https://img.shields.io/circleci/project/github/inlet/react-pixi/master.svg"}))," ","\xa0","\xa0"," ",Object(c.b)("img",{alt:"license",src:"https://img.shields.io/badge/license-MIT-green.svg"})," ","\xa0","\xa0"," ",Object(c.b)("img",{alt:"prettier",src:"https://img.shields.io/badge/code_style-prettier-blue.svg"})," ","\xa0","\xa0"," ",Object(c.b)("img",{alt:"react",src:"https://img.shields.io/badge/react-v16.8+-ff69b4.svg"})," ","\xa0","\xa0"," ",Object(c.b)("img",{alt:"pixi",src:"https://img.shields.io/badge/pixi-v4+-ff69b4.svg"})),Object(c.b)("p",null,"Write PIXI applications using React declarative style \ud83d\udc4c"),Object(c.b)("img",{src:"https://user-images.githubusercontent.com/232559/60211384-329d5e80-985f-11e9-9e0c-fc65d2f78c98.png",style:{maxWidth:"100%",width:500}}),Object(c.b)("h2",{id:"install"},"Install"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"npm install @inlet/react-pixi --save\n")),Object(c.b)("h2",{id:"example"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { Stage, Sprite } from '@inlet/react-pixi';\n\nconst App = () => (\n  <Stage>\n    <Sprite image=\"./bunny.png\" x={100} y={100} />\n  </Stage>\n);\n")),Object(c.b)("p",null,Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"https://codepen.io/collection/XPpGdb/"}),"Codepen examples")),Object(c.b)("p",null,Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/inlet/react-pixi/"}),"API Docs on Github")),Object(c.b)("h2",{id:"custom-components"},"Custom Components"),Object(c.b)("p",null,"Need other PIXI primitives or new feature(s) from ",Object(c.b)("inlineCode",{parentName:"p"},"pixi.js@v5"),"?"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import * as PIXI from 'pixi.js';\nimport { PixiComponent, Stage } from '@inlet/react-pixi';\n\nconst Rectangle = PixiComponent('Rectangle', {\n  create: props => new PIXI.Graphics(),\n  applyProps: (instance, _, props) => {\n    const { x, y, width, height, fill } = props;\n\n    instance.clear();\n    instance.beginFill(fill);\n    instance.drawRect(x, y, width, height);\n    instance.endFill();\n  },\n});\n\nconst App = () => (\n  <Stage>\n    <Rectangle x={100} y={100} width={500} height={300} fill={0xff0000} />\n  </Stage>\n);\n")),Object(c.b)("p",null,"Codepen examples:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"https://codepen.io/inlet/pen/feddc8fa71e3b5afc6c3e4eda9cc83df"}),"Particle Emitter")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"https://codepen.io/inlet/pen/5aaed9ddeadb4d7bb5ea435d77df397a"}),"Animated Sprite")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(i.a)({parentName:"li"},{href:"https://codepen.io/inlet/pen/mvzzLb"}),"Display"))))}b&&b===Object(b)&&Object.isExtensible(b)&&Object.defineProperty(b,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"README.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=readme.e87f7a492c5a81c98a6b.js.map